name: build-and-test-in-docker
run-name: ${{ github.actor }} builds and tests RGL in docker
on: workflow_dispatch
env:
  RGL_BUILD_TARGET: with-ros2
jobs:
  checkout-repository:
    runs-on: self-hosted
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      
  build-docker-image:
    needs: checkout-repository
    runs-on: self-hosted
    steps:
      - run: |
             if [[ "$(docker images -q rgl:$RGL_BUILD_TARGET 2> /dev/null)" == "" ]]
             then
               docker build . --tag rgl:$RGL_BUILD_TARGET --target $RGL_BUILD_TARGET
               docker tag rgl:$RGL_BUILD_TARGET localhost:5000/rgl-$RGL_BUILD_TARGET
               docker push localhost:5000/rgl-$RGL_BUILD_TARGET
             fi

# https://docs.docker.com/registry/deploying/
# to activate local registry
# docker run -d -p 5000:5000 --restart=always --name registry registry:2
  build-RGL-in-docker:
    needs: build-docker-image
    runs-on: self-hosted
    defaults:
      run:
        shell: bash
    container:
      image: localhost:5000/rgl-with-ros2
      env:
        OptiX_INSTALL_DIR: /optix
        NVIDIA_DRIVER_CAPABILITIES: all
      volumes:
        - /home/jakub/self-hosted-runner-test/actions-runner/_work/RobotecGPULidar/RobotecGPULidar:/code
        - /home/jakub/optix/NVIDIA-OptiX-SDK-7.2.0-linux64-x86_64:/optix
      options: 
        --rm 
        --name rgl
        --gpus all
    steps:
      - name: fix git
        run: git config --global --add safe.directory /__w/RobotecGPULidar/RobotecGPULidar
      - name: build and test RGL
        run: |
             . /opt/ros/humble/setup.bash && \
             ./setup.py --with-ros2-standalone && \
             sleep 2 && \
             ./build/test/RobotecGPULidar_test && \
             cp -r ./build/ros2_standalone/* ./build/ && \
             sleep 2 && \
             ./build/test/RobotecGPULidar_test

  test-RGL-in-default-nvidia-docker:
    needs: build-RGL-in-docker
    runs-on: self-hosted
    defaults:
      run:
        shell: bash
    container:
      image: nvidia/cuda:11.7.1-base-ubuntu22.04
      env:
        OptiX_INSTALL_DIR: /optix
        NVIDIA_DRIVER_CAPABILITIES: all
      volumes:
        - /home/jakub/self-hosted-runner-test/actions-runner/_work/RobotecGPULidar/RobotecGPULidar:/code
        - /home/jakub/optix/NVIDIA-OptiX-SDK-7.2.0-linux64-x86_64:/optix
      options: 
        --rm 
        --name rgl
        --gpus all
    steps:
      - name: test RGL inside default nvidia docker
        run: |
             apt-get install -y libspdlog-dev && \
             cd /code && \
             sleep 2 && \
             ./build/test/RobotecGPULidar_test
             
  remove-temp-files:
    if: always()
    needs: test-RGL-in-default-nvidia-docker
    runs-on: self-hosted
    defaults:
      run:
        shell: bash
    container:
      image: localhost:5000/rgl-with-ros2
      volumes:
        - /home/jakub/self-hosted-runner-test/actions-runner/_work/RobotecGPULidar/RobotecGPULidar:/code
      options:
        --rm
    steps:
      - name: remove build files and tape recordings
        run: |
             rm *.bin && \
             rm *.yaml && \
             rm -r build
               
